MySQL does not have a MERGE statement like SQL Server or Oracle. Instead, MySQL alternatives to perform MERGE-like behavior (i.e., insert new rows or update existing ones) include:

üß± Step 1: Create Table
We'll create a table EMP_INFO_MERGE with a PRIMARY KEY on ID.
    CREATE TABLE EMP_INFO_MERGE (
        ID INT PRIMARY KEY,
        FIRST_NAME VARCHAR(50),
        LAST_NAME VARCHAR(50),
        SALARY FLOAT
    );

üì• Step 2: Insert Initial Data
    INSERT INTO EMP_INFO_MERGE (ID, FIRST_NAME, LAST_NAME, SALARY) VALUES
    (1, 'Ram', 'Kumar', 25000),
    (2, 'Ravi', 'Sharma', 30000);

    SELECT * FROM EMP_INFO_MERGE;
Output:
    +----+------------+-----------+--------+
    | ID | FIRST_NAME | LAST_NAME | SALARY |
    +----+------------+-----------+--------+
    |  1 | Ram        | Kumar     | 25000  |
    |  2 | Ravi       | Sharma    | 30000  |
    +----+------------+-----------+--------+

üîÅ Step 3: MERGE Using INSERT ... ON DUPLICATE KEY UPDATE
Case 1: Insert New Record (ID = 3, doesn't exist)
    INSERT INTO EMP_INFO_MERGE (ID, FIRST_NAME, LAST_NAME, SALARY)
    VALUES (3, 'Raj', 'Verma', 28000)
    ON DUPLICATE KEY UPDATE SALARY = VALUES(SALARY);

Case 2: Update Existing Record (ID = 1 exists, so update SALARY)
    INSERT INTO EMP_INFO_MERGE (ID, FIRST_NAME, LAST_NAME, SALARY)
    VALUES (1, 'Ram', 'Kumar', 27000)
    ON DUPLICATE KEY UPDATE SALARY = VALUES(SALARY);

    SELECT * FROM EMP_INFO_MERGE;

üîÑ Step 4: MERGE Using REPLACE INTO
This deletes the old row (if it exists) and inserts a new one.
    REPLACE INTO EMP_INFO_MERGE (ID, FIRST_NAME, LAST_NAME, SALARY)
    VALUES (2, 'Ravi', 'Sharma', 35000);

‚ö†Ô∏è If there are foreign key constraints or AUTO_INCREMENT, this is risky ‚Äî use with caution.

üß™ Step 5: Use CONCAT to Combine Names
Basic:
    SELECT FIRST_NAME, LAST_NAME, CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULLNAME
    FROM EMP_INFO_MERGE;

With NULL-Safe Version:
    SELECT FIRST_NAME, LAST_NAME, CONCAT_WS(' ', FIRST_NAME, LAST_NAME) AS FULLNAME
    FROM EMP_INFO_MERGE;

CONCAT_WS is preferred if any of the name fields might be NULL.

‚úÖ Final Query to See Everything:
    SELECT * FROM EMP_INFO_MERGE;

    SELECT 
    FIRST_NAME,
    LAST_NAME,
    CONCAT(FIRST_NAME, ' ', LAST_NAME) AS CONCAT_FULLNAME,
    CONCAT_WS(' ', FIRST_NAME, LAST_NAME) AS WS_FULLNAME
    
    FROM EMP_INFO_MERGE;